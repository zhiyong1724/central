#ifndef __SYS_BUDDY_H__
#define __SYS_BUDDY_H__
#include "sys_cfg.h"
#include "sys_list.h"
#ifdef __cplusplus
extern "C"
{
#endif
typedef struct sys_buddy_t
{
	unsigned char *block_group;                                  //记录块属于哪一组
	long group_count;                                          //记录块组数量
	sys_list_node_t **block_list_array;                           //可用块链表队列
	void *start_address;                                         //内存起始地址
	long total_page_num;                                       //所有页数量
	long free_page_num;                                        //可用页数量
} sys_buddy_t;
/*********************************************************************************************************************
* sys_buddy_t初始化
* buddy：需要初始化的伙伴算法
* start_address：起始内存大小
* size：内存大小
* return：成功初始化的页面数量
*********************************************************************************************************************/
long sys_buddy_init(sys_buddy_t *buddy, void *start_address, long size);
/*********************************************************************************************************************
* 申请页面
* buddy：伙伴算法对象
* n：要申请的页面数量
* return：NULL：分配失败：否则返回页面首地址
*********************************************************************************************************************/
void *sys_buddy_alloc_pages(sys_buddy_t *buddy, long n);
/*********************************************************************************************************************
* 释放页面
* buddy：伙伴算法对象
* pages：要释放的页面首地址
*********************************************************************************************************************/
void sys_buddy_free_pages(sys_buddy_t *buddy, void *pages);
/*********************************************************************************************************************
* 获取所有页面数量
* buddy：伙伴算法对象
* return：所有页面数量
*********************************************************************************************************************/
long sys_buddy_total_page_num(sys_buddy_t *buddy);
/*********************************************************************************************************************
* 获取可用页面数量
* buddy：伙伴算法对象
* return：可用页面数量
*********************************************************************************************************************/
long sys_buddy_free_page_num(sys_buddy_t *buddy);
#ifdef __cplusplus
}
#endif
#endif
