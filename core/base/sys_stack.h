#ifndef __SYS_STACK_H__
#define __SYS_STACK_H__
#include "sys_cfg.h"
#ifdef __cplusplus
extern "C"
{
#endif
typedef struct sys_stack_t
{
	unsigned char *buff;
	int unit_size;
	int size;
	int max_size;
} sys_stack_t;
/*********************************************************************************************************************
* 初始化堆栈
* obj 堆栈对象
* unit_size 元素大小
* return 0：初始化成功
*********************************************************************************************************************/
int sys_stack_init(sys_stack_t *obj, int unit_size);
/*********************************************************************************************************************
* 释放堆栈
* obj 堆栈对象
*********************************************************************************************************************/
void sys_stack_free(sys_stack_t *obj);
/*********************************************************************************************************************
* 获取堆栈大小
* obj 堆栈对象
* return 堆栈大小
*********************************************************************************************************************/
int sys_stack_size(sys_stack_t *obj);
/*********************************************************************************************************************
* 获取当前最大容量
* obj 堆栈对象
* return 最大容量
*********************************************************************************************************************/
int sys_stack_max_size(sys_stack_t *obj);
/*********************************************************************************************************************
* 获取元素大小
* obj 堆栈对象
* return 元素大小
*********************************************************************************************************************/
int sys_stack_unit_size(sys_stack_t *obj);
/*********************************************************************************************************************
* 判断堆栈是否为空
* obj 堆栈对象
* return > 0:为空
*********************************************************************************************************************/
int sys_stack_empty(sys_stack_t *obj);
/*********************************************************************************************************************
* 调整堆栈最大容量
* obj 堆栈对象
* size 调整后的容量，只能比原来的大
* return 调整后的容量
*********************************************************************************************************************/
int sys_stack_resize(sys_stack_t *obj, int size);
/*********************************************************************************************************************
* 添加元素
* obj 堆栈对象
* data 数据
* return 元素数目
*********************************************************************************************************************/
int sys_stack_push(sys_stack_t *obj, void *data);
/*********************************************************************************************************************
* 访问最后的元素
* obj 堆栈对象
* return 返回的数据指针
*********************************************************************************************************************/
void *sys_stack_top(sys_stack_t *obj);
/*********************************************************************************************************************
* 弹出元素
* obj 堆栈对象
* return 0:成功移除
*********************************************************************************************************************/
int sys_stack_pop(sys_stack_t *obj);
#ifdef __cplusplus
}
#endif
#endif