#ifndef __VFS_H__
#define __VFS_H__
#include "sys_id_manager.h"
#include "sys_vfs.h"
#include "sys_lock.h"
#ifdef __cplusplus
extern "C"
{
#endif
struct vfs_t
{
    struct vfs_fs_t *fs;
    struct vfs_dentry_t *root;
    sys_id_manager_t id_manager;
    sys_vector_t files;
    sys_rwlock_t lock;
};
/*********************************************************************************************************************
* 初始化
* vfs：虚拟文件系统对象
* return：sys_error_t
*********************************************************************************************************************/
int vfs_init(struct vfs_t *vfs);
/*********************************************************************************************************************
* 析构虚拟文件系统对象
* vfs：虚拟文件系统对象
* return：sys_error_t
*********************************************************************************************************************/
void vfs_free(struct vfs_t *vfs);
/*********************************************************************************************************************
* 添加文件系统
* vfs：虚拟文件系统对象
* fs：文件系统接口对象
* return：sys_error_t
*********************************************************************************************************************/
int vfs_registerfs(struct vfs_t *vfs, struct vfs_fs_t *fs);
/*********************************************************************************************************************
* 挂载文件系统
* vfs：虚拟文件系统对象
* path：挂载路径
* device：块设备
* return：sys_error_t
*********************************************************************************************************************/
int vfs_mount(struct vfs_t *vfs, const char *path, const char *device);
/*********************************************************************************************************************
* 卸载文件系统
* vfs：虚拟文件系统对象
* path：挂载路径
* return：sys_error_t
*********************************************************************************************************************/
int vfs_umount(struct vfs_t *vfs, const char *path);
/*********************************************************************************************************************
* 打开文件
* vfs：虚拟文件系统对象
* path：文件路径
* flags：打开标记
* mode：打开模式
* return：成功：文件fd；失败：sys_error_t
*********************************************************************************************************************/
int vfs_open(struct vfs_t *vfs, const char *path, int flags, int mode);
/*********************************************************************************************************************
* 关闭文件
* vfs：虚拟文件系统对象
* fd：文件句柄
* return：sys_error_t
*********************************************************************************************************************/
int vfs_close(struct vfs_t *vfs, int fd);
/*********************************************************************************************************************
* 读取文件
* vfs：虚拟文件系统对象
* fd：文件句柄
* buff：数据缓存
* count：读取字节数
* return：成功：读取字节数；失败sys_error_t
*********************************************************************************************************************/
int vfs_read(struct vfs_t *vfs, int fd, void *buff, int count);
/*********************************************************************************************************************
* 写入文件
* vfs：虚拟文件系统对象
* fd：文件句柄
* buff：数据缓存
* count：写入字节数
* return：成功：写入字节数；失败sys_error_t
*********************************************************************************************************************/
int vfs_write(struct vfs_t *vfs, int fd, const void *buff, int count);
/*********************************************************************************************************************
* 偏移文件
* vfs：虚拟文件系统对象
* fd：文件句柄
* offset：偏移值
* whence：从哪里开始偏移
* return：成功：文件偏移值；失败sys_error_t
*********************************************************************************************************************/
int64_t vfs_lseek(struct vfs_t *vfs, int fd, int64_t offset, int whence);
/*********************************************************************************************************************
* 获取文件偏移
* vfs：虚拟文件系统对象
* fd：文件句柄
* return：成功：文件偏移值；失败sys_error_t
*********************************************************************************************************************/
int64_t vfs_ftell(struct vfs_t *vfs, int fd);
/*********************************************************************************************************************
* 把缓存数据写入到存储设备
* vfs：虚拟文件系统对象
* fd：文件句柄
* return：sys_error_t
*********************************************************************************************************************/
int vfs_syncfs(struct vfs_t *vfs, int fd);
/*********************************************************************************************************************
* 截断文件
* vfs：虚拟文件系统对象
* fd：文件句柄
* length：从哪里开始截断
* return：sys_error_t
*********************************************************************************************************************/
int vfs_ftruncate(struct vfs_t *vfs, int fd, int64_t length);
/*********************************************************************************************************************
* 获取文件信息
* vfs：虚拟文件系统对象
* path：文件路径
* stat：返回的文件信息
* return：sys_error_t
*********************************************************************************************************************/
int vfs_stat(struct vfs_t *vfs, const char *path, struct vfs_stat_t *stat);
/*********************************************************************************************************************
* 创建硬链接
* vfs：虚拟文件系统对象
* oldpath：旧的文件路径
* newpath：新链接文件路径
* return：sys_error_t
*********************************************************************************************************************/
int vfs_link(struct vfs_t *vfs, const char *oldpath, const char *newpath);
/*********************************************************************************************************************
* 删除文件
* vfs：虚拟文件系统对象
* path：文件路径
* return：sys_error_t
*********************************************************************************************************************/
int vfs_unlink(struct vfs_t *vfs, const char *path);
/*********************************************************************************************************************
* 修改文件权限
* vfs：虚拟文件系统对象
* path：文件路径
* mode：文件模式
* return：sys_error_t
*********************************************************************************************************************/
int vfs_chmod(struct vfs_t *vfs, const char *path, int mode);
/*********************************************************************************************************************
* 文件重命名
* vfs：虚拟文件系统对象
* oldpath：旧的文件路径
* newpath：新链接文件路径
* return：sys_error_t
*********************************************************************************************************************/
int vfs_rename(struct vfs_t *vfs, const char *oldpath, const char *newpath);
/*********************************************************************************************************************
* 创建目录
* vfs：虚拟文件系统对象
* path：文件路径
* mode：文件模式
* return：sys_error_t
*********************************************************************************************************************/
int vfs_mkdir(struct vfs_t *vfs, const char *path, int mode);
/*********************************************************************************************************************
* 删除目录
* vfs：虚拟文件系统对象
* path：文件路径
* return：sys_error_t
*********************************************************************************************************************/
int vfs_rmdir(struct vfs_t *vfs, const char *path);
/*********************************************************************************************************************
* 打开目录
* vfs：虚拟文件系统对象
* path：目录路径
* return：成功：文件fd；失败：sys_error_t
*********************************************************************************************************************/
int vfs_opendir(struct vfs_t *vfs, const char *path);
/*********************************************************************************************************************
* 关闭目录
* vfs：虚拟文件系统对象
* fd：文件句柄
* return：sys_error_t
*********************************************************************************************************************/
int vfs_closedir(struct vfs_t *vfs, int fd);
/*********************************************************************************************************************
* 读取目录
* vfs：虚拟文件系统对象
* fd：文件句柄
* dirent：返回的目录信息
* return：sys_error_t
*********************************************************************************************************************/
int vfs_readdir(struct vfs_t *vfs, int fd, struct vfs_dirent_t *dirent);
/*********************************************************************************************************************
* 重置目录对象
* vfs：虚拟文件系统对象
* fd：文件句柄
* return：sys_error_t
*********************************************************************************************************************/
int vfs_rewinddir(struct vfs_t *vfs, int fd);
/*********************************************************************************************************************
* 获取文件系统信息
* vfs：虚拟文件系统对象
* path：目录路径
* statfs：文件系统信息
* return：sys_error_t
*********************************************************************************************************************/
int vfs_statfs(struct vfs_t *vfs, const char *path, struct vfs_statfs_t *statfs);
#ifdef __cplusplus
}
#endif
#endif