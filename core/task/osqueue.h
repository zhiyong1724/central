#ifndef __OSQUEUE_H__
#define __OSQUEUE_H__
#include "ostaskdef.h"
#ifdef __cplusplus
extern "C"
{
#endif
#define OS_MESSAGE_MAX_WAIT_TIME ((os_size_t)-1 / 1000 / 1000)
typedef struct OsQueue * os_queue_t;
/*********************************************************************************************************************
* 创建队列
* queue：队列对象
* messageSize：消息大小
* return：0：调用成功
*********************************************************************************************************************/
int osQueueCreate(os_queue_t queue, os_size_t queueLength, os_size_t messageSize);
/*********************************************************************************************************************
* 删除一个队列，如果有任务正在阻塞，会删除失败
* queue：队列对象
* return：0：调用成功
*********************************************************************************************************************/
int osQueueDestory(os_queue_t queue);
/*********************************************************************************************************************
* 清空消息队列
* queue：队列对象
* return：0：调用成功
*********************************************************************************************************************/
int osQueueReset(os_queue_t queue);
/*********************************************************************************************************************
* 发送消息
* queue：队列对象
* message：消息
* return：0：调用成功
*********************************************************************************************************************/
int osQueueSend(os_queue_t queue, void *message);
/*********************************************************************************************************************
* 发送消息到队列前面
* queue：队列对象
* message：消息
* return：0：调用成功
*********************************************************************************************************************/
int osQueueSendToFront(os_queue_t queue, void *message);
/*********************************************************************************************************************
* 接收消息
* message：消息
* queue：队列对象
* wait：等待时间，0表示马上返回，OS_MESSAGE_MAX_WAIT_TIME表示永久等待
* return：0：调用成功
*********************************************************************************************************************/
int osQueueReceive(void *message, os_queue_t queue, uint64_t wait);
/*********************************************************************************************************************
* 获取消息数量
* queue：OsQueue对象
* return：消息数量
*********************************************************************************************************************/
os_size_t osQueueGetMessageCount(os_queue_t queue);
/*********************************************************************************************************************
* 获取队列长度
* queue：OsQueue对象
* return：队列长度
*********************************************************************************************************************/
os_size_t osQueueGetQueueLength(os_queue_t queue);
#ifdef __cplusplus
}
#endif
#endif