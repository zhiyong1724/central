#ifndef __OSTASK_H__
#define __OSTASK_H__
#include "ostaskdef.h"
#ifdef __cplusplus
extern "C"
{
#endif
/*********************************************************************************************************************
* 创建任务
* taskFunction：任务处理函数
* arg：传给任务的参数
* name：任务名称，最大长度为OS_TASK_MAX_NAME_LEN
* priority：优先级范围为0-39
* stackSize：任务堆栈大小
* tid：任务tid
* return：0：调用成功
*********************************************************************************************************************/
int osTaskCreate(os_tid_t *tid, TaskFunction taskFunction, void *arg, const char *name, os_size_t priority, os_size_t stackSize);
/*********************************************************************************************************************
* 创建实时任务
* taskFunction：任务处理函数
* arg：传给任务的参数
* name：任务名称，最大长度为OS_TASK_MAX_NAME_LEN
* priority：任务优先级范围0-63
* stackSize：任务堆栈大小
* tid：任务tid
* return：0：调用成功
*********************************************************************************************************************/
int osTaskCreateRT(os_tid_t *tid, TaskFunction taskFunction, void *arg, const char *name, os_size_t priority, os_size_t stackSize);
/*********************************************************************************************************************
* 时钟滴答
* ns：输入与上次tick的时间间隔，输出下次tick的时间间隔
* return：0：调用成功
*********************************************************************************************************************/
int osTaskTick(uint64_t *ns);
/*********************************************************************************************************************
* 修改优先级
* tid：任务tid
* priority：优先级
* return：0:调用成功
*********************************************************************************************************************/
int osTaskModifyPriority(os_tid_t tid, os_size_t priority);
/*********************************************************************************************************************
* 休眠一段时间
* ms：休眠的时间
* return：0：调用成功
*********************************************************************************************************************/
int osTaskSleep(uint64_t ms);
/*********************************************************************************************************************
* 挂起一个任务
* tid：要挂起的任务tid
* return：0：调用成功
*********************************************************************************************************************/
int osTaskSupend(os_tid_t tid);
/*********************************************************************************************************************
* 恢复一个任务
* tid：要恢复的任务tid
* return：0：调用成功
*********************************************************************************************************************/
int osTaskResume(os_tid_t tid);
/*********************************************************************************************************************
* 退出当前任务
* arg：任务退出参数
* return：0：调用成功
*********************************************************************************************************************/
int osTaskExit(void *arg);
/*********************************************************************************************************************
* 开始任务调度
* return：这个函数不会返回
*********************************************************************************************************************/
void osTaskStart();
/*********************************************************************************************************************
* 等待子任务退出
* retval：任务退出参数
* tid：等待任务tid
* return：0：调用成功
*********************************************************************************************************************/
int osTaskJoin(void **retval, os_size_t tid);
/*********************************************************************************************************************
* 把任务与父任务分离
* tid：分离任务tid
* return：0：调用成功
*********************************************************************************************************************/
int osTaskDetach(os_tid_t tid);
/*********************************************************************************************************************
* 获取系统ticks
* return：系统ticks
*********************************************************************************************************************/
uint64_t osTaskGetTickCount();
/*********************************************************************************************************************
* 获取任务个数
* return：任务个数
*********************************************************************************************************************/
os_size_t osTaskGetTaskCount();
/*********************************************************************************************************************
* 获取当前任务TID
* return：当前任务TID
*********************************************************************************************************************/
os_tid_t osTaskGetTid();
/*********************************************************************************************************************
* 获取任务优先级
* priority：任务优先级
* tid：任务tid
* return：0：调用成功
*********************************************************************************************************************/
int osTaskGetTaskPriority(os_size_t *priority, os_tid_t tid);
/*********************************************************************************************************************
* 获取任务调度类型
* type：任务调度类型
* tid：任务tid
* return：0：调用成功
*********************************************************************************************************************/
int osTaskGetTaskType(OsTaskType *type, os_tid_t tid);
/*********************************************************************************************************************
* 获取任务状态
* state：任务状态
* tid：任务tid
* return：0：调用成功
*********************************************************************************************************************/
int osTaskGetTaskState(OsTaskState *state, os_tid_t tid);
/*********************************************************************************************************************
* 获取任务名
* name：任务名
* size：name buffer大小
* tid：任务tid
* return：0：调用成功
*********************************************************************************************************************/
int osTaskGetTaskName(char *name, os_size_t size, os_tid_t tid);
/*********************************************************************************************************************
* 获取任务堆栈大小
* stackSize：任务堆栈大小
* tid：任务tid
* return：0：调用成功
*********************************************************************************************************************/
int osTaskGetTaskStackSize(os_size_t *stackSize, os_tid_t tid);
/*********************************************************************************************************************
* 返回任务是否为joinable
* tid：任务tid
* return：>0：joinable,0：Detach
*********************************************************************************************************************/
int osTaskJoinable(os_tid_t tid);
/*********************************************************************************************************************
* 获取cpu占用
* taskManager：OsTaskManager对象
* return：cpu占用
*********************************************************************************************************************/
os_size_t osTaskGetCPUUsage();
/*********************************************************************************************************************
* 发现第一个任务信息
* taskPtr：当前位置
* taskInfo：任务信息
* return：0：调用成功
*********************************************************************************************************************/
int osTaskFindFirst(os_task_ptr *taskPtr, OsTaskInfo *taskInfo);
/*********************************************************************************************************************
* 发现下一个任务信息
* taskPtr：当前位置
* taskInfo：任务信息
* return：0：调用成功
*********************************************************************************************************************/
int osTaskFindNext(os_task_ptr *taskPtr, OsTaskInfo *taskInfo);
#ifdef __cplusplus
}
#endif
#endif