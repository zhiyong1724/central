#ifndef __SYS_MSG_QUEUE_H__
#define __SYS_MSG_QUEUE_H__
#include "sys_list.h"
#include "sys_tree.h"
#ifdef __cplusplus
extern "C"
{
#endif
typedef struct sys_msg_queue_t
{
    int message_size;
    int message_count;
    int length;
    unsigned char *buffer;
    int write_index;
    int read_index;
    sys_tree_node_t *high_priority_task;
    sys_tree_node_t *wait_rt_task_list;
    sys_list_node_t *wait_task_list;
} sys_msg_queue_t;
#define SYS_MESSAGE_MAX_WAIT_TIME ((uint64_t)-1 / 1000 / 1000)
/*********************************************************************************************************************
* 创建队列
* queue：队列对象
* message_size：消息大小
* return：0：调用成功
*********************************************************************************************************************/
int sys_msg_queue_create(sys_msg_queue_t *queue, int queue_length, int message_size);
/*********************************************************************************************************************
* 删除一个队列，如果有任务正在阻塞，会删除失败
* queue：队列对象
* return：0：调用成功
*********************************************************************************************************************/
int sys_msg_queue_destory(sys_msg_queue_t *queue);
/*********************************************************************************************************************
* 清空消息队列
* queue：队列对象
*********************************************************************************************************************/
void sys_msg_queue_reset(sys_msg_queue_t *queue);
/*********************************************************************************************************************
* 发送消息
* queue：队列对象
* message：消息
* return：0：调用成功
*********************************************************************************************************************/
int sys_msg_queue_send(sys_msg_queue_t *queue, void *message);
/*********************************************************************************************************************
* 发送消息到队列前面
* queue：队列对象
* message：消息
* return：0：调用成功
*********************************************************************************************************************/
int sys_msg_queue_send_to_front(sys_msg_queue_t *queue, void *message);
/*********************************************************************************************************************
* 接收消息
* queue：队列对象
* message：消息
* wait：等待时间，0表示马上返回，SYS_MESSAGE_MAX_WAIT_TIME表示永久等待
* return：0：调用成功
*********************************************************************************************************************/
int sys_msg_queue_receive(sys_msg_queue_t *queue, void *message, uint64_t wait);
/*********************************************************************************************************************
* 获取消息数量
* queue：sys_msg_queue_t对象
* return：消息数量
*********************************************************************************************************************/
int sys_msg_queue_get_message_count(sys_msg_queue_t *queue);
/*********************************************************************************************************************
* 获取队列长度
* queue：sys_msg_queue_t对象
* return：队列长度
*********************************************************************************************************************/
int sys_msg_queue_get_queue_length(sys_msg_queue_t *queue);
#ifdef __cplusplus
}
#endif
#endif