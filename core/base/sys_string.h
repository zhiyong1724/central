#ifndef __SYS_STRING_H__
#define __SYS_STRING_H__
#include "sys_cfg.h"
#ifdef __cplusplus
extern "C"
{
#endif
typedef struct sys_string_t
{
    char *str;
    int len;
    int size;
} sys_string_t;
/*********************************************************************************************************************
 * 初始化sys_string_t对象
 * obj：sys_string_t对象
 * return：0：初始化成功
 *********************************************************************************************************************/
int sys_string_init(sys_string_t *obj);
/*********************************************************************************************************************
 * 释放sys_string_t对象
 * obj：sys_string_t对象
 * return：0：释放成功
 *********************************************************************************************************************/
void sys_string_free(sys_string_t *obj);
/*********************************************************************************************************************
 * 复制一个字符串到sys_string_t对象
 * obj：sys_string_t对象
 * s：要复制的字符串
 * return：0：复制成功
 *********************************************************************************************************************/
int sys_string_copy(sys_string_t *obj, const char *s);
/*********************************************************************************************************************
 * 附加一个字符串到sys_string_t对象
 * obj：sys_string_t对象
 * s：要附加的字符串
 * return：0：附加成功
 *********************************************************************************************************************/
int sys_string_append(sys_string_t *obj, const char *s);
/*********************************************************************************************************************
 * 重新设置sys_string_t的大小
 * obj：sys_string_t对象
 * size：新的大小
 * return：新的大小
 *********************************************************************************************************************/
int sys_string_resize(sys_string_t *obj, int size);
/*********************************************************************************************************************
 * 附加一个字符到sys_string_t对象
 * obj：sys_string_t对象
 * c：要附加的字符
 * return：0：附加成功
 *********************************************************************************************************************/
int sys_string_push(sys_string_t *obj, char c);
/*********************************************************************************************************************
 * 该函数可以设置一段内存空间的值
 * s：指向要被设置的内存空间
 * ch：需要被设置的值
 * n：要设置的大小
 * return：返回指向要被设置的内存空间
 *********************************************************************************************************************/
void *sys_memset(void *s, unsigned char ch, int n);
/*********************************************************************************************************************
* 该函数可以拷贝一段内存空间的值
* dest：指向被拷贝内存的存放空间
* src：指向被拷贝内存
* n：拷贝大小
* return：返回dest指针
*********************************************************************************************************************/
void *sys_memcpy(void *dest, const void *src, int n);
/*********************************************************************************************************************
 * 字符串拷贝函数
 * dest：指向被拷贝字符串的存放空间
 * src：指向被拷贝字符串
 * n：最大的拷贝大小
 * return：返回指向被拷贝字符串空间
 *********************************************************************************************************************/
void *sys_strcpy(char *dest, const char *src, int n);
/*********************************************************************************************************************
 * 返回字符串长度
 * str：字符串
 * return：字符串长度
 *********************************************************************************************************************/
int sys_strlen(const char *str);
/*********************************************************************************************************************
* 比较字符串
* str1：字符串1
* str2：字符串2
* return：-1：str1 < str2; 0: str1 == str2; 1: str1 > str2
*********************************************************************************************************************/
int sys_strcmp(const char *str1, const char *str2);
/*********************************************************************************************************************
* 连接字符串
* dest：字符串1，存放连接后的字符串
* src：字符串2
* n：字符串1的最大长度
*********************************************************************************************************************/
char *sys_strcat(char *dest, const char *src, int n);
/*********************************************************************************************************************
* 查找子字符串
* str：源字符串
* pattern：模式字符串
* return：成功匹配的位置，NULL：匹配失败
*********************************************************************************************************************/
char *sys_strstr(const char *str, const char *pattern);
#ifdef __cplusplus
}
#endif
#endif
