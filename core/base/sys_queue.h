#ifndef __SYS_QUEUE_H__
#define __SYS_QUEUE_H__
#include "sys_cfg.h"
#include "sys_list.h"
#ifdef __cplusplus
extern "C"
{
#endif
typedef struct sys_queue_t
{
	sys_list_node_t *queue;
	int unit_size;
	int size;
} sys_queue_t;
/*********************************************************************************************************************
* 初始化容器
* obj 容器对象
* unit_size 元素大小
* return 0：初始化成功
*********************************************************************************************************************/
void sys_queue_init(sys_queue_t *obj, int unit_size);
/*********************************************************************************************************************
* 释放容器
* obj 容器对象
*********************************************************************************************************************/
void sys_queue_free(sys_queue_t *obj);
/*********************************************************************************************************************
* 获取容器大小
* obj 容器对象
*********************************************************************************************************************/
int sys_queue_size(sys_queue_t *obj);
/*********************************************************************************************************************
* 获取元素大小
* obj 容器对象
*********************************************************************************************************************/
int sys_queue_unit_size(sys_queue_t *obj);
/*********************************************************************************************************************
* 判断容器是否为空
* obj 容器对象
*********************************************************************************************************************/
int sys_queue_empty(sys_queue_t *obj);
/*********************************************************************************************************************
* 从后面添加元素
* obj 容器对象
* data 数据
* return 元素数目
*********************************************************************************************************************/
int sys_queue_push(sys_queue_t *obj, void *data);
/*********************************************************************************************************************
* 访问最后的元素
* obj 容器对象
* return 返回的数据指针
*********************************************************************************************************************/
void *sys_queue_back(sys_queue_t *obj);
/*********************************************************************************************************************
* 访问第一个元素
* obj 容器对象
* return 返回的数据指针
*********************************************************************************************************************/
void *sys_queue_front(sys_queue_t *obj);
/*********************************************************************************************************************
* 清空所有元素
* obj 容器对象
*********************************************************************************************************************/
void sys_queue_clear(sys_queue_t *obj);
/*********************************************************************************************************************
* 从前面移除一个元素
* obj 容器对象
* return 0:成功移除
*********************************************************************************************************************/
int sys_queue_pop(sys_queue_t *obj);
#ifdef __cplusplus
}
#endif
#endif