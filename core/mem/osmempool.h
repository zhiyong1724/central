#ifndef __OSMEMPOOL_H__
#define __OSMEMPOOL_H__
#include "osdefine.h"
#include "oslist.h"
#ifdef __cplusplus
extern "C"
{
#endif
typedef struct OsMemPool
{
	os_byte_t *bitmap;                                             //记录页面是否可用
	void *startAddress;                                            //内存起始地址
	OsSingleListNode *pageList;                                    //可用页链表
	os_size_t totalPageNum;                                        //所有页数量
	os_size_t freePageNum;                                         //可用页数量
    os_size_t pageSize;                                            //页面大小
} OsMemPool;
/*********************************************************************************************************************
* OsMemPool初始化
* memPool：内存池对象
* startAddress：起始内存大小
* size：内存大小
* pageSize：页面大小
* return：成功初始化的页面数量
*********************************************************************************************************************/
os_size_t osMemPoolInit(OsMemPool *memPool, void *startAddress, os_size_t size, os_size_t pageSize);
/*********************************************************************************************************************
* 申请页面
* memPool：内存池对象
* return：NULL：分配失败：否则返回页面首地址
*********************************************************************************************************************/
void *osMemPoolAllocPage(OsMemPool *memPool);
/*********************************************************************************************************************
* 释放页面
* memPool：内存池对象
* page：要释放的页面首地址
* return：0:释放成功;
*********************************************************************************************************************/
int osMemPoolFreePage(OsMemPool *memPool, void *page);
/*********************************************************************************************************************
* 获取所有页面数量
* memPool：内存池对象
* return：所有页面数量
*********************************************************************************************************************/
os_size_t osMemPoolTotalPageNum(OsMemPool *memPool);
/*********************************************************************************************************************
* 获取可用页面数量
* memPool：内存池对象
* return：可用页面数量
*********************************************************************************************************************/
os_size_t osMemPoolFreePageNum(OsMemPool *memPool);
#ifdef __cplusplus
}
#endif
#endif