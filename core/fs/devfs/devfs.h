#ifndef __DEVFS_H__
#define __DEVFS_H__
#include "sys_devfs.h"
#ifdef __cplusplus
extern "C"
{
#endif
/*********************************************************************************************************************
* 初始化
* devfs：设备文件系统对象
* return：sys_error_t
*********************************************************************************************************************/
int devfs_init(struct devfs_t *devfs);
/*********************************************************************************************************************
* 析构设备文件系统对象
* devfs：设备文件系统对象
* return：sys_error_t
*********************************************************************************************************************/
void devfs_free(struct devfs_t *devfs);
/*********************************************************************************************************************
* 注册驱动程序
* devfs：设备文件系统对象
* driver：设备驱动
* return：sys_error_t
*********************************************************************************************************************/
int devfs_register_driver(struct devfs_t *devfs, struct devfs_driver_t *driver);
/*********************************************************************************************************************
* 创建设备
* devfs：设备文件系统对象
* driver_name：驱动名
* name：设备名
* data：设备数据
* mode：文件模式
* return：sys_error_t
*********************************************************************************************************************/
int devfs_create_device(struct devfs_t *devfs, const char *driver_name, const char *name, void *data, int mode);
/*********************************************************************************************************************
* 移除设备
* devfs：设备文件系统对象
* name：设备名
* release：释放函数
* return：sys_error_t
*********************************************************************************************************************/
int devfs_delete_device(struct devfs_t *devfs, const char *name);
/*********************************************************************************************************************
* 打开设备文件
* devfs：设备文件系统对象
* file：设备文件
* name：设备名
* flags：打开标志
* return：sys_error_t
*********************************************************************************************************************/
int devfs_open(struct devfs_t *devfs, struct devfs_file_t *file, const char *name, int flags);
/*********************************************************************************************************************
* 关闭设备文件
* devfs：设备文件系统对象
* file：设备文件
* return：sys_error_t
*********************************************************************************************************************/
int devfs_close(struct devfs_t *devfs, struct devfs_file_t *file);
/*********************************************************************************************************************
* 读取设备文件
* devfs：设备文件系统对象
* file：设备文件
* buff：数据缓存
* count：读取字节数
* return：sys_error_t
*********************************************************************************************************************/
int devfs_read(struct devfs_t *devfs, struct devfs_file_t *file, void *buff, int count);
/*********************************************************************************************************************
* 写设备文件
* devfs：设备文件系统对象
* file：设备文件
* buff：数据缓存
* count：写入字节数
* return：sys_error_t
*********************************************************************************************************************/
int devfs_write(struct devfs_t *devfs, struct devfs_file_t *file, const void *buff, int count);
/*********************************************************************************************************************
* 偏移设备文件
* devfs：设备文件系统对象
* file：设备文件
* offset：偏移值
* whence：从哪里开始偏移
* return：sys_error_t
*********************************************************************************************************************/
int64_t devfs_lseek(struct devfs_t *devfs, struct devfs_file_t *file,  int64_t offset, int whence);
/*********************************************************************************************************************
* 获取文件偏移
* devfs：设备文件系统对象
* file：设备文件
* return：成功：文件偏移值；失败sys_error_t
*********************************************************************************************************************/
int64_t devfs_ftell(struct devfs_t *devfs, struct devfs_file_t *file);
/*********************************************************************************************************************
* IO口控制
* devfs：设备文件系统对象
* file：设备文件
* offset：偏移值
* cmd：命令
* arg：参数
* return：sys_error_t
*********************************************************************************************************************/
int devfs_iostl(struct devfs_t *devfs, struct devfs_file_t *file,  int cmd, int64_t arg);
/*********************************************************************************************************************
* 把缓存数据写入到存储设备
* devfs：设备文件系统对象
* file：设备文件
* return：sys_error_t
*********************************************************************************************************************/
int devfs_syncfs(struct devfs_t *devfs, struct devfs_file_t *file);
/*********************************************************************************************************************
* 获取文件信息
* devfs：设备文件系统对象
* name：文件名
* stat：文件信息
* return：sys_error_t
*********************************************************************************************************************/
int devfs_stat(struct devfs_t *devfs, const char *name, struct devfs_stat_t *stat);
#ifdef __cplusplus
}
#endif
#endif